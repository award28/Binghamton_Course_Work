.ORIG x3000
	
	LD R6, STACKBASE
	LD R0, ZERO
	LD R1, ZERO
	ADD R0, R0, #8
	ADD R1, R1, #2
	;PUSH R0 AND R1 ONTO THE STACK
	ADD R6, R6, #-1
	STR R0, R6, #0
	ADD R6, R6, #-1
	STR R1, R6, #0
	;JUMP TO DIVIDE
	JSR DIVIDE
	ADD R0, R0, R0
	HALT

SUBTRACT
	ST R0, SAVER0
	ST R1, SAVER1
	LDR R1, R6, #0
	ADD R6, R6, #1
	LDR R0, R6, #0
	ADD R6, R6, #1
	;SUBTRACT THE TWO VALUES
	NOT R1, R1
	ADD R1, R1, #1
	ADD R0, R0, R1
	;STORE THE VALUE
	ST R0, SUBVAL
	LD R0, SAVER0
	LD R1, SAVER1	
	RET

MULTIPLY
	ST R0, SAVER0
	ST R1, SAVER1
	ST R2, SAVER2
	LD R2, ZERO
	LDR R1, R6, #0
	ADD R6, R6, #1
	LDR R0, R6, #0
	ADD R6, R6, #1
	;MULTIPLY THE TWO VALUES
LOOP
	ADD R2, R2, R1
	ADD R0, R0, #-1
	BRP LOOP
	ST R2, MULVAL
	LD R0, SAVER0
	LD R1, SAVER1
	LD R2, SAVER2
	RET

DIVIDE
	ST R0, SAVER0
	ST R1, SAVER1
	ST R2, SAVER2
	ST R3, SAVER3
	ST R4, SAVER4
	ST R5, SAVER5
	ST R7, SAVER7
	LDR R1, R6, #0
	ADD R6, R6, #1
	LDR R0, R6, #0
	ADD R6, R6, #1
	LD R2, ZERO
	LD R3, ZERO
	LD R4, ZERO
	;DIVIDE THE TWO VALUE
	DIVLOOP
		ADD R2, R2, #1
		ADD R4, R2, #0
		ADD R6, R6, #-1
		STR R1, R6, #0
		ADD R6, R6, #-1
		STR R4, R6, #0
		JSR MULTIPLY
		LD R5, MULVAL
		ADD R6, R6, #-1
		STR R0, R6, #0
		ADD R6, R6, #-1
		STR R5, R6, #0
		JSR SUBTRACT
		LD R3, SUBVAL
		BRP DIVLOOP
	ST R2, DIVVAL
	LD R0, SAVER0
	LD R1, SAVER1
	LD R2, SAVER2
	LD R3, SAVER3
	LD R4, SAVER4
	LD R5, SAVER5
	LD R7, SAVER7
	RET
	
ZERO	  .FILL x0
SAVER0    .FILL x0
SAVER1    .FILL x0
SAVER2 	  .FILL x0
SAVER3 	  .FILL x0
SAVER4	  .FILL x0
SAVER5	  .FILL x0
SAVER7	  .FILL x0
SUBVAL    .FILL x0
MULVAL    .FILL x0
DIVVAL 	  .FILL x0
STACKBASE .FILL x5000
.END
