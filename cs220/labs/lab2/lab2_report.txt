Name: 

CS-220 Spring 2016 Lab 02 Report Due Friday, Feb. 12, 2016

1. Copy a version of your working "factorial" function here: (Whatever data type you currently are using is OK)
	char factorial(char n) {
		if(n>1){ n=n*factorial(n-1);}
		return n;
	}

2. What is the largest number that you can use to compute a correct factorial using "char" as the returned value?  Why?
		The largest number I can use to computer a correct factorial is 5, as it is the last number to return a factorial number under 7 bits. 

3. What is the largest number that you can use to compute a correct factorial using "unsigned char" as the returned value?
	Is this different from signed char?  If not, why not?  If so, why?
		It's not different from signed char, as the next number that needs to be computed requires 9 bits unsigned.
	
4. What type of integer data allows factorial to return the largest correct result?  
	What is the largest argument for which factorial returns a correct result using this type?
	Unsigned long long int returns the largest possible value. factorical(20) = 2432902008176640000.		
5. What is the largest value for which this program can compute an exact and correct result?
	What type of data produces this largest value?
		Long double is the largest possible value, with a factorial of 25, = 15511210043330985984000000. 
